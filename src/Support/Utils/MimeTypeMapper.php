<?php

namespace Innoboxrr\AwsFileManager\Support\Utils;

class MimeTypeMapper
{
    private static $mimeTypeMap = [
        'application/x-directory' => 'directory',
        'application/octet-stream' => 'binary',
        'image/png' => 'png',
        'image/jpeg' => 'jpeg',
        'image/gif' => 'gif',
        'image/svg+xml' => 'svg',
        'image/bmp' => 'bmp',
        'image/tiff' => 'tiff',
        'application/pdf' => 'pdf',
        'application/msword' => 'doc',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document' => 'docx',
        'application/epub+zip' => 'epub',
        'application/vnd.ms-powerpoint' => 'ppt',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation' => 'pptx',
        'application/vnd.ms-excel' => 'xls',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' => 'xlsx',
        'application/zip' => 'zip',
        'application/x-rar-compressed' => 'rar',
        'application/x-7z-compressed' => '7z',
        'application/x-bzip' => 'bz',
        'application/x-bzip2' => 'bz2',
        'application/x-gzip' => 'gz',
        'application/x-tar' => 'tar',
        'text/plain' => 'txt',
        'text/html' => 'html',
        'text/css' => 'css',
        'text/javascript' => 'js',
        'application/json' => 'json',
        'application/xml' => 'xml',
        'application/xhtml+xml' => 'xhtml',
        'application/ld+json' => 'jsonld',
        'application/rtf' => 'rtf',
        'application/vnd.apple.installer+xml' => 'mpkg',
        'application/vnd.oasis.opendocument.text' => 'odt',
        'application/vnd.oasis.opendocument.spreadsheet' => 'ods',
        'application/vnd.oasis.opendocument.presentation' => 'odp',
        'application/vnd.oasis.opendocument.graphics' => 'odg',
        'application/vnd.mozilla.xul+xml' => 'xul',
        'application/vnd.google-earth.kml+xml' => 'kml',
        'application/vnd.google-earth.kmz' => 'kmz',
        'audio/midi' => 'midi',
        'audio/mpeg' => 'mp3',
        'audio/ogg' => 'ogg',
        'audio/wav' => 'wav',
        'audio/webm' => 'weba',
        'audio/aac' => 'aac',
        'audio/x-aiff' => 'aiff',
        'video/x-msvideo' => 'avi',
        'video/mpeg' => 'mpeg',
        'video/ogg' => 'ogv',
        'video/webm' => 'webm',
        'video/mp4' => 'mp4',
        'video/quicktime' => 'mov',
        'video/x-flv' => 'flv',
        'video/x-ms-wmv' => 'wmv',
        'video/x-ms-asf' => 'asf',
        'font/ttf' => 'ttf',
        'font/otf' => 'otf',
        'font/woff' => 'woff',
        'font/woff2' => 'woff2',
        'application/vnd.ms-fontobject' => 'eot',
        'application/x-font-ttf' => 'ttf',
        'application/x-font-opentype' => 'otf',
        'application/x-font-woff' => 'woff',
        'application/x-font-woff2' => 'woff2',
        'application/x-font-eot' => 'eot',
        'application/x-font-otf' => 'otf',
        'application/x-font-sfnt' => 'sfnt',
        'application/x-font-ttc' => 'ttc',
        'application/x-font-type1' => 'pfa',
    ];
    

    public static function getMimeTypeFromContent($contentType)
    {
        return self::$mimeTypeMap[$contentType] ?? $contentType;
    }
}
